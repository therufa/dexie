import type { inferRouterOutputs } from "@trpc/server";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useState } from "react";

import { api } from "../utils/api";
import type { CardRouter } from '../server/api/routers/card';

type CardProp = inferRouterOutputs<CardRouter>['filter'][0];

const Card = ({ card }: { card: CardProp }) => {
  return (
    <li>
      <Image
        src={card.image.en_US}
        alt={card.slug}
        width={200}
        height={276.56}
      />
      <span>{card.slug}</span>
      <span>{card.tier}</span>
    </li>
  );
}

const Home: NextPage = () => {
  const [name, setName] = useState("World");
  const cardQuery = api.card.filter.useQuery({ name });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="">
        <input value={name} onChange={(e) => setName(e.target.value)} />
        <ul className="grid grid-cols-2 md:grid-cols-4 lg:grid-cols-6 gap-4">
          {cardQuery.data?.map((card) => (<Card key={card.id} card={card} />))}
        </ul>
      </main>
    </>
  );
};

export default Home;
